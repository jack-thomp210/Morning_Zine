Road-map
Here's a Python road-map to take you from complete beginner to advanced with machine learning. I don't know what area of computer science you're interested in (AI, web dev, etc.) but I'd say do everything up to intermediate and then branch off. You'll need everything up to intermediate to have any chance of passing a tech interview if you want to do this as a career. Hopefully, this provides some framework for you to get started on:

Beginner
Data Types - Lists, Strings, Tuples, Sets, Floats, Ints, Booleans, Dictionaries

Control Flow/Looping - for loops, while loops, if/elif/else

Arithmetic and expressions

I/O (Input/Output) - Sys module, Standard input/output, reading/writing files  

Functions

Exceptions and Error Handling

Basics of object oriented programming (OOP) (Simple classes).

Intermediate
Recursion

More advanced OOP - Inheritance, Polymorphism, Encapsulation, Method overloading.

Data Structures - Linked lists, Stacks, Queues, Binary Search Trees, AVL Trees, Graphs, Minimum Spanning Trees, Hash Maps

Algorithms - Linear Search, Binary Search, Hashing, Quicksort, Insertion/Selection Sort, Merge Sort, Radix Sort, Depth First Search, Breathe First Search, Prim's Algorithm, Dijkstra's Algorithm.

Algorithmic Complexity

Advanced - A.I. / Machine Learning/ Data science
Statistics

Probability

Brute Force search

Heuristic search (Manhattan Distance, Admissible and Informed Heuristics)

Hill Climbing

Simulated Annealing

A* search

Adversarial Search (Minimax & Alpha-Beta pruning)

Greedy Algorithms

Dynamic Programming

Genetic Algorithms

Artificial Neural Networks

Backpropagation

Natural Language Processing

Convolutional Neural Networks

Recurrent Neural Networks

Generative Adversarial Networks

Advanced - Full stack web development
Computer networks (Don't need to go into heavy detail but an understanding is necessary)

Backend web dev tools (flask, django) (This is for app logic, interfacing with databases etc).

Front end framework (This is for communicating with the backend) (Angular 6+, React/Redux)

With frontend you'll also need - HTML, CSS, Javascript (also good to learn typescript which is using in angular. It makes writing javascript nicer).

Relational database (MySQL, PostgreSQL)

Non-relational (MongoDB)

Cloud computing knowledge is good, (AWS, Google Cloud, Azure)

Resources
Books
Automate the boring stuff

Algorithms and Data structures in Python by Goldwasser (Intermediate level)

Python Programming: An Introduction to Computer Science

Here's some ones for other related and important topics:

Clean Code by Robert Martin (How to write good code)

The Pragmatic Programmer by Andrew Hunt (General software engineering / best practices)

Computer Networking: A Top-Down Approach (Networks, useful depending on the field you're entering, anything internet based this stuff will be important)

The Linux Command Line, 2nd Edition (Install the Linux operating system and get used to using the command line, it'll be your best friend).

Artificial Intelligence: A Modern Approach

Online courses:
I am not a fan of youtube for learning as you're just being hand-fed code and not being given any exercises to practice with so I won't be linking youtube video series here. In fact I'm not a fan of video courses in general but these two are good.

Udemy - Complete Python Masterclass (This is for beginners stage).

Coursera - Deep Learning Specialization by Andrew Ng (Advanced - A.I.)

Most importantly, practice, practice, practice. You won't get anywhere just watching videos of others programming. Try dedicate an hour a day or 2 hours a day on the weekend if you can.